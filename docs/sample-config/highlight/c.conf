[[string]]
pattern=\\".-"
inherit="string"

[[char]]
pattern=\\'(.|\\.)'
inherit="string"

[[preprocessor-directives]]
pattern=\\#([^\\]|\\.)-(\n|$)
flags="m"
inherit="builtin"

[[keyword]]
inherit="keyword"

[[value]]
inherit="value"

[[number]]
pattern=\\[0-9]+(\.[0-9]*)?
inherit="value"

[[primitive-type]]
inherit="type"

[[identifier]]
pattern=\\[a-zA-Z_\$][a-zA-Z0-9_\$]*
inherit="identifier"
promote:keyword=["alignas","alignof","auto","break","case","const","constexpr","continue","default","do","else","extern","for","goto","if","inline","register","restrict","return","sizeof","static","static_assert","switch","thread_local","typedef","typeof","typeof_unqual","volatile","while"]
promote:primitive-type=["bool","char","double","enum","float","int","long","short","signed","unsigned","struct","union","void"]
promote:value=["true","false","nullptr"]

[[builtin-func]]
pattern=\\__[a-zA-Z][a-zA-Z0-9_]*__
inherit="builtin"

[[comment]]
pattern=\\//.*
inherit="comment"

[[multiline-comment]]
pattern=\\/\*.*\*/
flags="m"
inherit="comment"
